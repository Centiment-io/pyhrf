.. _volume_treatment:

Volume treatment
****************

The main utilisation of pyhrf is composed of 4 steps :

   1. :ref:`Build a parcellation <parcellation>`
   2. :ref:`Configure a pyhrf treatment <treatment_setup>`
   3. :ref:`Launch the pyhrf detection-estimation procedure <running>`
   4. :ref:`View result outputs <viewer>`

The following procedure details this utilisation to apply the Joint Detection Estimation (JDE) algorithm to fMRI data.

.. _parcellation:

Parcellation
============

The default treatment already includes a parcellation data file which simply corresponds to two temporal regions of interest. In this respect, the first way to create a parcellation is to defined a n-ary mask of ROIs (one integer per ROI, 0 is the background) which can be procuded by the `marsbar <http://marsbar.sourceforge.net/>`_ SPM toolbox.

PyHRF also provides several tools to build a parcellation, which will be soon documented. 

.. _treatment_setup:

Treatment configuration
=======================

The minimal information needed by a Pyhrf treatment for one session is: 

* the BOLD data, concatenated over all scan volumes, ie 3D+time.
* a parcellation which is a 3D volume of labels defining the ROIs.
* a set of stimulus names associated to onset sequences. 

These inputs are gathered in an XML configuration file. 
A template of such file can be generated by issuing the command::

            pyhrf_jde_buildcfg

A file detectestim.xml is then created. By default, it contains the definition of a treatment over default data included in the Pyhrf distribution (a localizer experiment). It serves as example to build a customized treatment. 

To edit this file, you can use the XML editor::

   pyhrf_xmledit detecestim.xml

The **fmri_data** section comprises: all fMRI session data (**sessions_data**), the time of repetition (**tr**) and the mask file (**mask_file**). 
Within **sessions_data**, each numbered child tag stands for one session. By default only one session is present, indexed by **i0**. If you have to append other session data, index them by *i1*, *i2*, and so on. Down one level, the definition of one session is made of:

    * **onsets**, which stores the stimulus time arrivals of the  different experimental conditions. Every label of experimental condition must be unique. The sequence associated to each condition is the set of time arrivals in seconds, separated by one space delimiter.
    * **durations**, which must be consistent with the fore-mentioned **onsets** defition and define the durations of stimuli in seconds. If empty, then peaked stimuli (duration=0) are considered.
    * **bold_file**, which indicates the location of the 3D+time BOLD data file. Supported formats: nifti, analyse.

Following **fmri_data**, there are parameters that describe data and are common to all sessions:

    * **tr** is the time of repetition expressed in seconds.
    * **mask_file**, which indicates the location of the mask data file defining ROIs: a volume of labels (integers) where 0 is the background.

The following **analyser** section groups all parameters for the actual analysis. 
The contrasts have to be defined in **analyser/sampler/responseLevels/constrasts**.
Note that condition labels must be consistent with those entered in the data definition part. See contextual comments within the xml for more information on other parameters.

.. _running:

Treatment Execution
===================

To run the pyhrf treatment defined in detectestim.xml::

   pyhrf_jde_estim -v1

Here -v1 stands for the level of verbosity (from 0: quiet, to 6: everything - debugging purpose)

Result output files
-------------------
The main outputs (nifti format) are written in the current directory by default (or the directory specified in detectestim.xml, see **sampler/output_dir**):

    * **Contrast maps**: contrast maps are generated with the following file names: jde_mcmc_nrls_contrasts_<contrast_name>.nii. Their associated standard deviations are stored in files like jde_mcmc_nrls_contrasts_std_<contrast_name>.nii. Finally normalized contrasts are stored in files jde_mcmc_nrls_ncontrasts_<contrast_name>.nii
    * **Response levels maps**: for each condition, estimated RL are stored in files of the form: jde_mcmc_nrl_pm_condition_<condition_name>.nii
    * **Hemodynamic responses**: to each voxel, the product a*h is computed and storedin jde_mcmc_ah.nii. Note that one HRF shape is common to all conditions, but its magnitude varies.

.. _viewer:

Viewer
======

The pyhrf viewer is called with nifti volumes as inputs. To view all the results within the JDE output directory::

    pyhrf_view *nii
