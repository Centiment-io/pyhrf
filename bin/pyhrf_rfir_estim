#! /bin/env python
# -*- coding: utf-8 -*-
import os, sys, string
from optparse import OptionParser

from pyhrf import xmlio
from pyhrf.verbose import dictToString
from pyhrf.ui.treatment import run_pyhrf_cmd_treatment
from pyhrf.ui.rfir_ui import DEFAULT_CFG_FILE

PROFILE_FILE = 'hrfestim.prf'

run_pyhrf_cmd_treatment('pyhrf_rfir_buildcfg', 'pyhrf_rfir_estim', DEFAULT_CFG_FILE, PROFILE_FILE,'HRF')

#usage = 'usage: %%prog [options]'

#description = 'Manage the treatment for HRF shape estimation from fMRI data.' \
              #'This command runs the treatment defined in an xml '\
              #'parameter file. See pyhrf_hrf_buildcfg command to build a'\
              #'template of such a file. If no xml file found, then runs a '\
              #'default example analysis.'

#parser = OptionParser(usage=usage, description=description)

#parser.add_option('-c','--input-cfg-file', metavar='XMLFILE', dest='cfgFile',
                  #default=DEFAULT_CFG_FILE,
                  #help='XML file containing parameters')

#parser.add_option('-v','--verbose',dest='verbose',metavar='INTEGER',
                  #type='int',default=0,
                  #help=dictToString(pyhrf.verboseLevels))

#parser.add_option('-p','--profile',action='store_true', default=False,
                  #help='Enable profiling of treatment. Store profile data in %s'\
                  #%PROFILE_FILE)

#(options,args) = parser.parse_args()

#pyhrf.verbose.set_verbosity(options.verbose)

#if not os.path.exists(options.cfgFile):
    ##treatment = FMRITreatment()
    #print 'Error: could not find default configuration file "%s"\n'\
          #'Consider running "pyhrf_hrf_buildcfg" to generate it.' \
          #%options.cfgFile
    #sys.exit(1)
#else:
    #pyhrf.verbose(1, 'Loading configuration from: "%s" ...'\
                  #%options.cfgFile)
    #f = open(options.cfgFile, 'r')
    #sXml = string.join(f.readlines())
    #f.close()
    #treatment = xmlio.fromXML(sXml)
#if options.profile:
    #import cProfile
    #cProfile.run("treatment.run()", PROFILE_FILE)
#else:
    #treatment.run()

